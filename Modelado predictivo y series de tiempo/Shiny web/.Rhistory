install.packages(c("shiny", "shiny.semantic", "shinybootstrap2"))
install.packages(c("shiny", "shiny.semantic", "shinydashboard", "shinybootstrap2"))
install.packages("shiny")
shiny::runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
mpg
data(mpg)
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
library(ggplot2)
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
install.packages("DT")
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
data(mpg)
mpg
shiny::runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
shiny::runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
runApp('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST')
get()
getwd()
setwd("C:\\EstebanRuiz\\Materias de Posgrado\\Modelado predictivo y series de tiempo\\Shiny")
getwd()
setwd("C:\\EstebanRuiz\\Materias de Posgrado\\Modelado predictivo y series de tiempo\\Shiny web")
runApp('MPST')
getwd()
datos <- read.table("base_trab1.txt",header = T)
load("C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST/.RData")
datos <- read.table("base_trab1.txt",header = T)
datos <- read.table('base_trab1.txt',header = T)
datos <- read.table('C:\EstebanRuiz\Materias de Posgrado\Modelado predictivo y series de tiempo\Shiny web\MPST\base_trab1.txt',header = T)
datos <- read.table('C:\EstebanRuiz\Materias de Posgrado\Modelado predictivo y series de tiempo\Shiny web\MPST\base_trab1.txt',header = T)
datos <- read.table('C:\EstebanRuiz\Materias de Posgrado\Modelado predictivo y series de tiempo\Shiny web\MPST\base_trab1.txt',header = T)
datos <- read.table('C:/EstebanRuiz/Materias de Posgrado/Modelado predictivo y series de tiempo/Shiny web/MPST/base_trab1.txt',header = T)
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
datos[datos$GENERO=="MUJER"]$ESTATURA
datos[datos$GENERO="MUJER"]$ESTATURA
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
datos
datos
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
library("xtable", lib.loc="~/R/win-library/3.4")
runApp('MPST')
runApp('MPST')
summary(datos
)
summary(datos)[1,]
summary(datos)[,1:8]
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
summary(datos)[,1]
t(summary(datos)[,1])
summary(datos)[1,]
summary(datos)[1,1]
summary(datos)[1,1:3]
summary(datos)[1:3,1]
runApp('MPST')
length(summary(datos))
length(summary(datos[,1])
)
runApp('MPST')
cbind(summary(datos)[1:2,1],summary(datos)[1:7,2])
cbind(summary(datos)[1:6,1],summary(datos)[1:6,2])
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
?summary
runApp('MPST')
runApp('MPST')
?par
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
par(datos[,-1])
par(datos)
pairs(datos)
runApp('MPST')
runApp('MPST')
runApp('MPST')
install.packages("forecast")
data(gas)
library(forecast)
data(gas)
runApp('MPST')
gas
plot(gas,main="",xlab="",ylab="")
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
output$serie <- renderPlot(
#plot.ts(gas,main="Produccion de gas mensual en Australia",xlab="Tiempo mensual",ylab="Gas producido"),
seasonplot(gas)
tsdisplay(gas)
)
output$serie <- renderPlot(
#plot.ts(gas,main="Produccion de gas mensual en Australia",xlab="Tiempo mensual",ylab="Gas producido"),
seasonplot(gas)
tsdisplay(gas)
)
tsdisplay(gas)
tsdisplay(gas)
runApp('MPST')
runApp('MPST')
runApp('MPST')
par(mfrow=c(1,2))
output$serie <- renderPlot(
par(mfrow=c(1,2)),
plot.ts(gas,main="Produccion de gas mensual en Australia",xlab="Tiempo mensual",ylab="Gas producido"),
acf(gas)
#seasonplot(gas)
#tsdisplay(gas)
)
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
output$serie <- renderPlot(
plot.ts(gas,main="Produccion de gas mensual en Australia",xlab="Tiempo mensual",ylab="Gas producido")
?plot
#seasonplot(gas)
#tsdisplay(gas)
)
?plot
?plot
?write.csv
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
runApp('MPST')
